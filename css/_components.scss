/**
 * _components.scss contains solely the mixin definitions for components.
 *
 * + This file should not depend on styles.scss; we should be able to use
 *   include this file without including styles.scss.
 * + This file should not generate any CSS on it's own; it should only contain
 *   mixin and/or function definitions.
 */


/**
 * The columns mixin makes it so that immmediate child elements appear as
 * columns. It is responsive, allowing you to specify the media query at which
 * to switch the layout from stacking to columns.
 *
 * Additionally, it assumes the use of <hr> elements to create visual gutters
 * that are only visible while displayed as columns.
 *
 * <div class="columns">
 *     <div>
 *         <h2>A column</h2>
 *     </div>
 *     <hr />
 *     <div>
 *         <h2>Another column</h2>
 *     </div>
 * </div>
 *
 * Emmet: .colums>div+(hr+div)*2
 */
@mixin columns($query: "min-width: 669px") {
    > hr {
        border: 0;
        display: none;
    }

    @media only screen and (unquote($query)) {
        & {
            display: table;
            table-layout: fixed;
            width: 100%;

            > * {
                display: table-cell;
                vertical-align: top;
            }
            > hr {
                display: table-cell;
                width: 1rem;
            }
        }
    }
}



/**
 * The background-video mixin styles an edge-to-edge background video. Because 
 * elements within .hero are absolutely positioned, .heroâ€™s height gets wiped 
 * out. We assign it a faux-height via a ::before pseudo element.
 *
 * Emmet: .background-video>.hero>.panel{$1}+video
 */
@mixin background-video() {
    .container {
        margin-left: auto;
        margin-right: auto;
        max-width: 1140px;
        padding-left: 20px;
        padding-right: 20px;
        position: relative;
        z-index: 2;
    }

    .hero {
        overflow: hidden;
        padding: 40px 0;
        position: relative;
        .panel {
            left: 0;
            position: absolute;
            top: 0;
            width: 100%;
            z-index: 3;
            > div {
                color: #FFF;
                margin-left: auto;
                margin-right: auto;
                margin-top: 30px;
                max-width: 1140px;
                padding-left: 20px;
                padding-right: 20px;
            }
        }
        video {
            left: 0;
            position: absolute;
            top: 0;
            width: 100%;
            z-index: 1;
        }
    }

    .hero::before {
        content: "";
        display: block;
        padding-top: 33.333%;
    }

    @media only screen and (min-width: 1024px) {
        .hero {
            .panel {
                > div {
                    margin-top: 60px;
                }
            }
        }
    }
}